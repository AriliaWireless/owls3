#!/bin/bash

#
#	License type: BSD 3-Clause License
#	License copy: https://github.com/Telecominfraproject/wlan-cloud-ucentralgw/blob/master/LICENSE
#
#	Created by Stephane Bourque on 2021-03-04.
#	Arilia Wireless Inc.
#

if [[ "$(which jq)" == "" ]]
then
  echo "You need the package jq installed to use this script."
  exit 1
fi

if [[ "$(which curl)" == "" ]]
then
  echo "You need the package curl installed to use this script."
  exit 1
fi

if [[ "${OWSEC}" == "" ]]
then
  echo "You must set the variable OWSEC in order to use this script. Something like"
  echo "OWSEC=security.isp.com:16001"
  exit 1
fi

if [[ "${FLAGS}" == "" ]]
then
	FLAGS="-s"
fi

token=""
result_file=result.json
username="tip@ucentral.com"
password="NoMoreN00bs!"
browser_list=(firefox sensible-browser xdg-open w3m links links2 lynx youtube-dl)
browser=""

login() {
  payload="{ \"userId\" : \"$username\" , \"password\" : \"$password\" }"
  token=$(curl ${FLAGS} -X POST -H "Content-Type: application/json" -d "$payload" "https://${OWSEC}/api/v1/oauth2" | jq -r '.access_token')

  if [[ "${token}" == "" ]]
  then
  	echo "Could not login. Please verify the host and username/password."
    exit 13
  fi
  echo "${token}" > token.json
  setowls
}

findbrowser() {
	if [[ "${browser}" != "" ]]
	then
		echo
	elif [[ "$(uname)" == "Darwin" ]]
	then
		browser=open
	else
		BROWSER_LIST=(firefox sensible-browser xdg-open w3m links links2 lynx youtube-dl)
		for br_name in "${browser_list[@]}"
		do
			if [[ $(which ${br_name}) != "" ]]
			then
				browser=${br_name}
				break
			fi
		done
	fi
}

setowls() {
	curl  ${FLAGS} -X GET "https://${OWSEC}/api/v1/systemEndpoints" \
        -H "accept: application/json" \
        -H "Authorization: Bearer ${token}"  > ${result_file}
#	jq < ${result_file}

	for index in {0..10}
	do
		endpointlocation=".endpoints[${index}].uri"
	endpointlocationtype=".endpoints[${index}].type"
	rawurl="$(cat ${result_file} | jq -r ${endpointlocation})"
	svctype="$(cat ${result_file} | jq -r ${endpointlocationtype})"
	proto="$(echo $rawurl | grep :// | sed -e's,^\(.*://\).*,\1,g')"
	url="$(echo ${rawurl/$proto/})"
	user="$(echo $url | grep @ | cut -d@ -f1)"
	hostport="$(echo ${url/$user@/} | cut -d/ -f1)"
	host="$(echo $hostport | sed -e 's,:.*,,g')"
	port="$(echo $hostport | sed -e 's,^.*:,:,g' -e 's,.*:\([0-9]*\).*,\1,g' -e 's,[^0-9],,g')"
	path="$(echo $url | grep / | cut -d/ -f2-)"
	if [[ ${url} != "null" ]]
		then
		if [[ ${svctype} == "owls" ]]
			then
			OWLS="${url}"
			break
		fi
	fi
	done
#	echo "Using ${OWLS}..."
}

logout() {
  curl  ${FLAGS} -X DELETE -H "Content-Type: application/json" \
        -H "Authorization: Bearer ${token}" \
        "https://${OWSEC}/api/v1/oauth2/${token}"
  rm -rf token.json
}

createsim() {
    payload="{ \"name\" : \"$1\", \"gateway\" : \"https://ucentral.arilia.com:15002\", \"certificate\" : \"cert\" , \"key\" : \"key\" , \"macPrefix\" : \"030000\", \"devices\" : 5 , \"deviceType\" :  \"edgecore_ecw5410\" }";
    curl    ${FLAGS} -X POST "https://${OWLS}/api/v1/simulation" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer ${token}" \
    -H "accept: application/json" \
    -d "$payload" > ${result_file}
    jq < ${result_file}
}

listsim() {
    curl    ${FLAGS} -X GET "https://${OWLS}/api/v1/simulation" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer ${token}" > ${result_file}
    jq < ${result_file}
}

deletesim() {
    curl    ${FLAGS} -X DELETE "https://${OWLS}/api/v1/simulation?id=$1" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer ${token}" > ${result_file}
    jq < ${result_file}
}

startsim()  {
    curl    ${FLAGS} -X POST "https://${OWLS}/api/v1/operation?simulationId=$1&operation=start" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer ${token}" > ${result_file}
    jq < ${result_file}
}

stopsim()  {
    curl    ${FLAGS} -X POST "https://${OWLS}/api/v1/operation?id=$1&operation=stop" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer ${token}" > ${result_file}
    jq < ${result_file}
}

cancelsim()  {
    curl    ${FLAGS} -X POST "https://${OWLS}/api/v1/operation?id=$1&operation=cancel" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer ${token}" > ${result_file}
    jq < ${result_file}
}

getsimstats() {
    curl    ${FLAGS} -X GET "https://${OWLS}/api/v1/status" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer ${token}" > ${result_file}
    jq < ${result_file}
}

results() {
    curl    ${FLAGS} -X GET "https://${OWLS}/api/v1/results" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer ${token}" > ${result_file}
    jq < ${result_file}
}

shopt -s nocasematch
case "$1" in
    "login") login; echo "You succesfully logged in..."  ; logout ;;
    "createsim") login; createsim "$2" ; logout;;
    "listsim") login; listsim; logout;;
    "deletesim") login; deletesim $2; logout;;
    "startsim") login; startsim "$2"; logout;;
    "stopsim") login; stopsim "$2" ; logout;;
    "cancelsim") login; cancelsim "$2" ; logout;;
    "getsimstats") login; getsimstats ; logout;;
    "results") login; results ; logout;;
    *) help ;;
esac

